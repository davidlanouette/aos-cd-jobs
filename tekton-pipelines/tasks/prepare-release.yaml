apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: prepare-release
  labels:
    app: "artcd"
spec:
  params:
  - name: group
    description: Group name. e.g. openshift-4.9
  - name: assembly
    description: The name of an assembly; must be defined in releases.yml (e.g. 4.9.1)
  - name: date
    description: Expected release date (e.g. 2022-Mar-25)
  - name: package_owner
    description: (Optional) Must be an individual email address; may be anyone who wants random advisory spam
    default: ""
  - name: name
    description: (Optional) When prepare a release from a stream assembly, use this field to specify the release name.
    default: ""
  - name: nightlies
    description: (Optional) When prepare a release from a stream assembly, use this field to specify proposed nightlies for testing and promotion.
    default: ""
  - name: dry_run
    description: If "true", just exercise the steps without actually preparing a release
    default: "false"
  steps:
  - name: prepare-release
    image: image-registry.openshift-image-registry.svc:5000/art-cd/artcd:latest
    script: |
      #!/usr/bin/env python3
      import re
      import os
      import subprocess
      from pathlib import Path

      subprocess.run(["rm", "-rf", "/home/dev/.ssh"], check=True, universal_newlines=True)
      subprocess.run(["cp", "-r", "/tekton/home/.ssh", "/home/dev/.ssh"], check=True, universal_newlines=True)
      subprocess.run(["chmod", "700", "/home/dev/.ssh"], check=True, universal_newlines=True)
      subprocess.run(["chmod", "600", "/home/dev/.ssh/id_rsa"], check=True, universal_newlines=True)

      subprocess.run(["kinit", "-f", "-k", "-t", "/etc/kerberos-keytab/jenkins-buildvm-keytab", "ocp-build/buildvm.openshift.eng.bos.redhat.com@IPA.REDHAT.COM"], check=True, universal_newlines=True)
      cmd = [
          "artcd",
          "-v",
          "--config=/etc/artcd/artcd.toml",
      ]
      if "$(params.dry_run)" == "true":
          cmd.append("--dry-run")
      cmd.extend([
          "prepare-release",
          "--group", "$(params.group)",
          "--assembly", "$(params.assembly)",
          "--date", "$(params.date)",
      ])
      release_name = "$(params.name)"
      if release_name:
          cmd.extend(["--name", release_name])
      package_owner = "$(params.package_owner)"
      if package_owner:
          cmd.extend(["--package-owner", package_owner])

      nightlies = [nightly for nightly in re.split(r'[\s,]', "$(params.nightlies)") if nightly]
      for nightly in nightlies:
          cmd.append("--nightly")
          cmd.append(nightly)

      print(f"Running {cmd}...")
      subprocess.run(cmd, check=True, universal_newlines=True, env=os.environ.copy())

    env:
    - name: JIRA_TOKEN
      valueFrom:
        secretKeyRef:
          name: jira
          key: token
    # https://github.com/tektoncd/pipeline/issues/2013
    - name: HOME
      value: /home/dev
    volumeMounts:
    - name: artcd-config
      mountPath: /etc/artcd/
    - name: elliott-config
      mountPath: /home/dev/.config/elliott/
    - name: doozer-config
      mountPath: /home/dev/.config/doozer/
    - name: ssh-config
      mountPath: /tekton/home/.ssh/known_hosts
      subPath: known_hosts
      readOnly: false
    - name: git-config
      mountPath: /home/dev/.gitconfig
      subPath: .gitconfig
      readOnly: false
    - name: kerberos-config
      mountPath: /etc/krb5.conf.d/krb5-redhat.conf
      subPath: krb5-redhat.conf
    - name: ssh-auth
      mountPath: /tekton/home/.ssh/id_rsa
      subPath: id_rsa
    - name: registry-cred
      mountPath: /home/dev/.docker/config.json
      subPath: .dockerconfigjson
    - name: bugzilla-apikey
      mountPath: /home/dev/.config/python-bugzilla/
    - name: kerberos-keytab
      mountPath: /etc/kerberos-keytab
  volumes:
  - name: artcd-config
    configMap:
      name: artcd-config
  - name: elliott-config
    configMap:
      name: elliott-config
  - name: doozer-config
    configMap:
      name: doozer-config
  - name: ssh-config
    configMap:
      name: ssh-config
  - name: git-config
    configMap:
      name: git-config
  - name: kerberos-config
    configMap:
      name: kerberos-config
  - name: ssh-auth
    secret:
      secretName: artbot-ssh-auth
  - name: registry-cred
    secret:
      secretName: registry-cred
  - name: bugzilla-apikey
    secret:
      secretName: bugzilla-apikey
  - name: kerberos-keytab
    secret:
      secretName: jenkins-buildvm-keytab
